//HintName: Result.g.cs
// <auto-generated/>
#pragma warning disable
#nullable enable
namespace MyApp
{
    partial class Result
    {
        private readonly global::MyApp.Success? _Success;
        public bool IsSuccess => _Success != null;
        public global::MyApp.Success AsSuccess => _Success ?? throw new System.InvalidOperationException("This is not a Success");
        public Result(global::MyApp.Success Success)
        {
            System.ArgumentNullException.ThrowIfNull(Success);
            _Success = Success;
        }

        public static implicit operator Result(global::MyApp.Success Success) => new Result(Success);
        public static explicit operator global::MyApp.Success(Result value) => value.AsSuccess;
        private readonly global::MyApp.Error? _Error;
        public bool IsError => _Error != null;
        public global::MyApp.Error AsError => _Error ?? throw new System.InvalidOperationException("This is not a Error");
        public Result(global::MyApp.Error Error)
        {
            System.ArgumentNullException.ThrowIfNull(Error);
            _Error = Error;
        }

        public static implicit operator Result(global::MyApp.Error Error) => new Result(Error);
        public static explicit operator global::MyApp.Error(Result value) => value.AsError;
        public TOut Match<TOut>(global::System.Func<global::MyApp.Success, TOut> matchSuccess, global::System.Func<global::MyApp.Error, TOut> matchError)
        {
            if (IsSuccess)
                return matchSuccess(AsSuccess);
            if (IsError)
                return matchError(AsError);
            throw new InvalidOperationException("Unknown type");
        }
    }
}