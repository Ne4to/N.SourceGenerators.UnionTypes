//HintName: Result.g.cs
// <auto-generated>
//   This code was generated by https://github.com/Ne4to/N.SourceGenerators.UnionTypes
//   Feel free to open an issue
// </auto-generated>
#pragma warning disable
#nullable enable
namespace MyApp
{
    [System.Runtime.InteropServices.StructLayout(System.Runtime.InteropServices.LayoutKind.Explicit)]
    partial struct Result : IEquatable<Result>
    {
        [System.Runtime.InteropServices.FieldOffset(0)]
        private readonly int _variantId;
        private const int SuccessStructId = 1;
        [System.Runtime.InteropServices.FieldOffset(4)]
        private readonly global::MyApp.SuccessStruct _successStruct;
        public bool IsSuccessStruct => _variantId == SuccessStructId;
        public global::MyApp.SuccessStruct AsSuccessStruct
        {
            get
            {
                if (IsSuccessStruct)
                    return _successStruct;
                throw new InvalidOperationException($"Inner value is {InnerValueAlias}, not SuccessStruct");
            }
        }

        public Result(global::MyApp.SuccessStruct SuccessStruct)
        {
            _variantId = SuccessStructId;
            _successStruct = SuccessStruct;
        }

        public static implicit operator Result(global::MyApp.SuccessStruct SuccessStruct) => new Result(SuccessStruct);
        public static explicit operator global::MyApp.SuccessStruct(Result value) => value.AsSuccessStruct;
        public bool TryGetSuccessStruct([System.Diagnostics.CodeAnalysis.NotNullWhen(true)] out global::MyApp.SuccessStruct? value)
        {
            if (IsSuccessStruct)
            {
                value = _successStruct;
                return true;
            }
            else
            {
                value = default;
                return false;
            }
        }

        private const int ValidationErrorStructId = 2;
        [System.Runtime.InteropServices.FieldOffset(4)]
        private readonly global::MyApp.ValidationErrorStruct _validationErrorStruct;
        public bool IsValidationErrorStruct => _variantId == ValidationErrorStructId;
        public global::MyApp.ValidationErrorStruct AsValidationErrorStruct
        {
            get
            {
                if (IsValidationErrorStruct)
                    return _validationErrorStruct;
                throw new InvalidOperationException($"Inner value is {InnerValueAlias}, not ValidationErrorStruct");
            }
        }

        public Result(global::MyApp.ValidationErrorStruct ValidationErrorStruct)
        {
            _variantId = ValidationErrorStructId;
            _validationErrorStruct = ValidationErrorStruct;
        }

        public static implicit operator Result(global::MyApp.ValidationErrorStruct ValidationErrorStruct) => new Result(ValidationErrorStruct);
        public static explicit operator global::MyApp.ValidationErrorStruct(Result value) => value.AsValidationErrorStruct;
        public bool TryGetValidationErrorStruct([System.Diagnostics.CodeAnalysis.NotNullWhen(true)] out global::MyApp.ValidationErrorStruct? value)
        {
            if (IsValidationErrorStruct)
            {
                value = _validationErrorStruct;
                return true;
            }
            else
            {
                value = default;
                return false;
            }
        }

        private const int NotFoundErrorStructId = 3;
        [System.Runtime.InteropServices.FieldOffset(4)]
        private readonly global::MyApp.NotFoundErrorStruct _notFoundErrorStruct;
        public bool IsNotFoundErrorStruct => _variantId == NotFoundErrorStructId;
        public global::MyApp.NotFoundErrorStruct AsNotFoundErrorStruct
        {
            get
            {
                if (IsNotFoundErrorStruct)
                    return _notFoundErrorStruct;
                throw new InvalidOperationException($"Inner value is {InnerValueAlias}, not NotFoundErrorStruct");
            }
        }

        public Result(global::MyApp.NotFoundErrorStruct NotFoundErrorStruct)
        {
            _variantId = NotFoundErrorStructId;
            _notFoundErrorStruct = NotFoundErrorStruct;
        }

        public static implicit operator Result(global::MyApp.NotFoundErrorStruct NotFoundErrorStruct) => new Result(NotFoundErrorStruct);
        public static explicit operator global::MyApp.NotFoundErrorStruct(Result value) => value.AsNotFoundErrorStruct;
        public bool TryGetNotFoundErrorStruct([System.Diagnostics.CodeAnalysis.NotNullWhen(true)] out global::MyApp.NotFoundErrorStruct? value)
        {
            if (IsNotFoundErrorStruct)
            {
                value = _notFoundErrorStruct;
                return true;
            }
            else
            {
                value = default;
                return false;
            }
        }

        public TOut Match<TOut>(global::System.Func<global::MyApp.SuccessStruct, TOut> matchSuccessStruct, global::System.Func<global::MyApp.ValidationErrorStruct, TOut> matchValidationErrorStruct, global::System.Func<global::MyApp.NotFoundErrorStruct, TOut> matchNotFoundErrorStruct)
        {
            if (IsSuccessStruct)
                return matchSuccessStruct(AsSuccessStruct);
            if (IsValidationErrorStruct)
                return matchValidationErrorStruct(AsValidationErrorStruct);
            if (IsNotFoundErrorStruct)
                return matchNotFoundErrorStruct(AsNotFoundErrorStruct);
            throw new InvalidOperationException("Inner type is unknown");
        }

        public async global::System.Threading.Tasks.Task<TOut> MatchAsync<TOut>(global::System.Func<global::MyApp.SuccessStruct, global::System.Threading.CancellationToken, global::System.Threading.Tasks.Task<TOut>> matchSuccessStruct, global::System.Func<global::MyApp.ValidationErrorStruct, global::System.Threading.CancellationToken, global::System.Threading.Tasks.Task<TOut>> matchValidationErrorStruct, global::System.Func<global::MyApp.NotFoundErrorStruct, global::System.Threading.CancellationToken, global::System.Threading.Tasks.Task<TOut>> matchNotFoundErrorStruct, global::System.Threading.CancellationToken ct)
        {
            if (IsSuccessStruct)
                return await matchSuccessStruct(AsSuccessStruct, ct).ConfigureAwait(false);
            if (IsValidationErrorStruct)
                return await matchValidationErrorStruct(AsValidationErrorStruct, ct).ConfigureAwait(false);
            if (IsNotFoundErrorStruct)
                return await matchNotFoundErrorStruct(AsNotFoundErrorStruct, ct).ConfigureAwait(false);
            throw new InvalidOperationException("Inner type is unknown");
        }

        public void Switch(global::System.Action<global::MyApp.SuccessStruct> switchSuccessStruct, global::System.Action<global::MyApp.ValidationErrorStruct> switchValidationErrorStruct, global::System.Action<global::MyApp.NotFoundErrorStruct> switchNotFoundErrorStruct)
        {
            if (IsSuccessStruct)
            {
                switchSuccessStruct(AsSuccessStruct);
                return;
            }

            if (IsValidationErrorStruct)
            {
                switchValidationErrorStruct(AsValidationErrorStruct);
                return;
            }

            if (IsNotFoundErrorStruct)
            {
                switchNotFoundErrorStruct(AsNotFoundErrorStruct);
                return;
            }

            throw new InvalidOperationException("Inner type is unknown");
        }

        public async global::System.Threading.Tasks.Task SwitchAsync(global::System.Func<global::MyApp.SuccessStruct, global::System.Threading.CancellationToken, global::System.Threading.Tasks.Task> switchSuccessStruct, global::System.Func<global::MyApp.ValidationErrorStruct, global::System.Threading.CancellationToken, global::System.Threading.Tasks.Task> switchValidationErrorStruct, global::System.Func<global::MyApp.NotFoundErrorStruct, global::System.Threading.CancellationToken, global::System.Threading.Tasks.Task> switchNotFoundErrorStruct, global::System.Threading.CancellationToken ct)
        {
            if (IsSuccessStruct)
            {
                await switchSuccessStruct(AsSuccessStruct, ct).ConfigureAwait(false);
                return;
            }

            if (IsValidationErrorStruct)
            {
                await switchValidationErrorStruct(AsValidationErrorStruct, ct).ConfigureAwait(false);
                return;
            }

            if (IsNotFoundErrorStruct)
            {
                await switchNotFoundErrorStruct(AsNotFoundErrorStruct, ct).ConfigureAwait(false);
                return;
            }

            throw new InvalidOperationException("Inner type is unknown");
        }

        public global::System.Type ValueType
        {
            get
            {
                if (IsSuccessStruct)
                    return typeof(global::MyApp.SuccessStruct);
                if (IsValidationErrorStruct)
                    return typeof(global::MyApp.ValidationErrorStruct);
                if (IsNotFoundErrorStruct)
                    return typeof(global::MyApp.NotFoundErrorStruct);
                throw new InvalidOperationException("Inner type is unknown");
            }
        }

        private global::System.Object InnerValue
        {
            get
            {
                if (IsSuccessStruct)
                    return AsSuccessStruct;
                if (IsValidationErrorStruct)
                    return AsValidationErrorStruct;
                if (IsNotFoundErrorStruct)
                    return AsNotFoundErrorStruct;
                throw new InvalidOperationException("Inner type is unknown");
            }
        }

        private string InnerValueAlias
        {
            get
            {
                if (IsSuccessStruct)
                    return "SuccessStruct";
                if (IsValidationErrorStruct)
                    return "ValidationErrorStruct";
                if (IsNotFoundErrorStruct)
                    return "NotFoundErrorStruct";
                throw new InvalidOperationException("Inner type is unknown");
            }
        }

        public override int GetHashCode()
        {
            return InnerValue.GetHashCode();
        }

        public static bool operator ==(Result left, Result right)
        {
            return left.Equals(right);
        }

        public static bool operator !=(Result left, Result right)
        {
            return !left.Equals(right);
        }

        public bool Equals(Result other)
        {
            if (ValueType != other.ValueType)
            {
                return false;
            }

            if (IsSuccessStruct)
                return EqualityComparer<global::MyApp.SuccessStruct>.Default.Equals(AsSuccessStruct, other.AsSuccessStruct);
            if (IsValidationErrorStruct)
                return EqualityComparer<global::MyApp.ValidationErrorStruct>.Default.Equals(AsValidationErrorStruct, other.AsValidationErrorStruct);
            if (IsNotFoundErrorStruct)
                return EqualityComparer<global::MyApp.NotFoundErrorStruct>.Default.Equals(AsNotFoundErrorStruct, other.AsNotFoundErrorStruct);
            throw new InvalidOperationException("Inner type is unknown");
        }

        public override string ToString()
        {
            return $"{InnerValueAlias} - {InnerValue}";
        }

        public override bool Equals(object? obj)
        {
            return obj is Result other && Equals(other);
        }
    }
}